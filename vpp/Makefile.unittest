noinst_PROGRAMS = unittest

unittest_SOURCES = \
	unittest_main.cpp \
	$(NULL)

unittest_SOURCES += vaapipostprocess_scaler_unittest.cpp

if BUILD_OCL_FILTERS
unittest_SOURCES += \
	oclpostprocess_blender_unittest.cpp \
	oclpostprocess_mosaic_unittest.cpp \
	oclpostprocess_osd_unittest.cpp \
	oclpostprocess_transform_unittest.cpp \
	oclpostprocess_wireframe_unittest.cpp \
	$(NULL)
endif

unittest_LDFLAGS = \
	$(GTEST_LDFLAGS) \
	$(AM_LDFLAGS) \
	$(NULL)

unittest_LDADD = \
	libyami_vpp.la \
	$(top_builddir)/vaapi/libyami_vaapi.la \
	$(top_builddir)/common/libyami_common.la \
	$(GTEST_LIBS) \
	$(NULL)

unittest_CPPFLAGS = \
	$(GTEST_CPPFLAGS) \
	$(LIBVA_CFLAGS) \
	$(AM_CPPFLAGS) \
	-I$(top_srcdir)/interface \
	$(NULL)

unittest_CXXFLAGS = \
	$(GTEST_CXXFLAGS) \
	$(AM_CXXFLAGS) \
	$(NULL)

# Separate the vaapipostprocess_host_unittest so that we can detect static
# initialization bugs with the vpp factory.  Separation is required
# since any derived vpp that is explicitly constructed in another test
# would hide such bugs.
noinst_PROGRAMS += unittest_host
unittest_host_SOURCES = \
	unittest_main.cpp \
	vaapipostprocess_host_unittest.cpp \
	$(NULL)

unittest_host_LDFLAGS = \
	$(GTEST_LDFLAGS) \
	$(AM_LDFLAGS) \
	$(NULL)

unittest_host_LDADD = \
	libyami_vpp.la \
	$(top_builddir)/vaapi/libyami_vaapi.la \
	$(top_builddir)/common/libyami_common.la \
	$(GTEST_LIBS) \
	$(NULL)

unittest_host_CPPFLAGS = \
	$(GTEST_CPPFLAGS) \
	$(LIBVA_CFLAGS) \
	$(AM_CPPFLAGS) \
	-I$(top_srcdir)/interface \
	$(NULL)

unittest_host_CXXFLAGS = \
	$(GTEST_CXXFLAGS) \
	$(AM_CXXFLAGS) \
	$(NULL)

check-local: unittest unittest_host
	$(builddir)/unittest
	$(builddir)/unittest_host

